In C shell, ">&" is used to redirect both standard output (stdout) and standard Error
(stderr) to a file or to another file descriptor. For example, "command >& file" redirects both stdout and stderr to the file named "file".

"1>&-" and "2>&-" are used to close the standard output and standard error file descriptor respectively.

"1>&-" closes the standard output file descriptor, so any subsequent output from that
command will be discarded.

"2>&-" closes the standard error file descriptor, so any subsequent error messages
from that command will be discarded.

"2>" is also used to redirect standard error to a file or another file descriptor.
For example, "command 2> file" redirects stderr to the file named "file", while stdout still goes to the terminal

" >&-" is used to close both stdout and stderr file descriptor and discard any output
or error messages from the command.

It's worth noting that in C shell, the ">" operator only redirects stdout, and "2>" operator redirects stderr.



>&		1 and 2 to a file (if no file: parse error)
>&-		close 2 and 1
<&-		close 0 (DONT ACCEPT)
1>&-	close 1
2>&-	close 2
1>&2	make 1 a copy of 2
2>&1	make 2 a copy of 1
1>2
1>>2
2>1
2>>1